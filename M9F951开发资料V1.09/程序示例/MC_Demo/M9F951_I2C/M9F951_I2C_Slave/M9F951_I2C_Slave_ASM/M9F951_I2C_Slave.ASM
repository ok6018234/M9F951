;//*****************(ASM) COPYRIGHT 2021 Masses-Chip ****************************
;* Project Name		  : M9F951 I2C Slave.prj
;* File Name		  : M9F951_I2C_Slave.ASM
;* Author			  : MASSES CHIP
;* Version			  : V2.00
;* Date				  : 2021/09/15
;* Web				  : www.masses-chip.com
;* FAE				  : Luo
;					  : QQ：411680975
;//******************************************************************************
;
;Option:16M/16T,WDT-Enable-288ms,RST-IO,BOR 2.4V 
;说明:本范例为IIC主机模式，数据线SDA0(IOF5)、时钟线SCL0(IOF6)；
;包括主机的写与读操作，主机在从机RAM区0x20开始写入数据0x55、0xAA、0xFF，
;主机读取从机的数据在RAM区0x20开始存放
;设备地址为0xA0
;//******************************************************************************
;//==============================================================================
;//***********************************头文件*************************************
;//用户不可更改
;//==============================================================================
		LIST 		P=M9F951
INCLUDE	 	M9F951.INC


;//==============================================================================
;//******************************定义全局变量************************************
;//用户可以自行看需求定义变量
;//==============================================================================
userdata 	udata		H'00'

sFSR0L				res		1		;//保护FSR0L
sFSR0H				res		1		;//保护FSR0L
R_Recieve_Data		res		1		;//接收数据
R_Data_Address		res		1		;//数据地址

R_I2C_Flag			res		1		;//I2C标志
#define		b_Data_Address_F		R_I2C_Flag,0	;//数据地址发送标志
;//==============================================================================
;//*********************************C O D E**************************************
;//==============================================================================	
		ORG			0000H
		GOTO		MainProgram
		ORG			0008H
		GOTO		Interrupt	

;//==============================================================================
;//********************************程序主函数************************************
;//==============================================================================			
;//--------------------------------程序初始化------------------------------------
MainProgram:
		CALL		SYSTEM_INIT				;//系统初始化
		CALL		Clr_RAM_0000H_07FFH		;//清零RAM
		CALL		I2C_Slave_INIT			;//I2C主机初始化
;//------------------------------主函数循环--------------------------------------		
MainLoop:
		CLRWDT
		GOTO		MainLoop
		
		
;//==============================================================================
;//******************************中断服务子程序**********************************
;//进入中断保护FSR，出中断恢复
;//==============================================================================
;//中断进来
Interrupt:
		MOVR 		FSR0L,0
		MOVAR 		sFSR0L
		MOVR 		FSR0H,0
		MOVAR 		sFSR0H					;//保存FSR0x（中断中用到，保护）

		JBTS0		INTF2,I2C0IF
		GOTO		I2C_Slave_Work
Interrupt_END:
;//中断结束
		MOVR		sFSR0L,0
        MOVAR		FSR0L
        MOVR		sFSR0H,0
        MOVAR		FSR0H					;//恢复FSR0x
	    RETIE		1						;//返回A、BSR、STATUS的值

;//==============================================================================
;//******************************I2C主机初始化***********************************
;//端口设置：IOF5(SDA0)、IOF6(SCL0)端口上拉、输入
;//I2C从机设置：开启I2C功能，作为从机，地址为0xA0
;//中断设置：开启I2C中断与总中断
;//==============================================================================	
I2C_Slave_INIT:
;//1、端口设置
		BSET		PUF,5				;//SDA0
		BCLR		OEF,5
		BSET		PUF,6				;//SCL0
		BCLR		OEF,6
;//2、I2C寄存器设置
		BANKBSR		0x0F
		MOVIA		0x80
		MOVAR		I2C0CR1
		MOVIA		0x00
		MOVAR		I2C0CR2
		MOVIA		0x0F
		MOVAR		I2C0PRESC
;//3、设置从机地址
		MOVIA		0xA0
		MOVAR		I2C0OAR
;//4、中断设置
		BCLR		INTF2,I2C0IF
		BSET		INTCR2,I2C0IE
		BSET		OPTION,GIEH
		RETURN


;//==============================================================================
;//**********************************系统初始化**********************************
;//系统时钟初始化：快钟、慢钟都正常工作，不进休眠
;//IO初始化:设置个IO状态为输出低，且关闭上下拉
;//中断总开关：关闭总开关
;//==============================================================================		
SYSTEM_INIT:
;//-----------------------------------------------------------------------           
;//Init Clock
		MOVIA       b'00000000'
		MOVAR		OSCM
;//Init IO	
		BANKBSR	   	0x0F		;//切页，ANSx寄存器需要切页操作
        ;//IOA
        MOVIA      	0x00 
		MOVAR		ANSA		;//0:数字口	  1:模拟口 
        MOVAR     	PUA			;//0:上拉关闭 1:上拉使能  	 	
        MOVAR      	PDA			;//0:下拉关闭 1:下拉使能
		MOVAR      	IOA        	;//0:输出低   1:输出高
		MOVIA      	0xFF    	
        MOVAR      	OEA			;//0:输入     1:输出   	
		;//IOB
        MOVIA      	0x00
		MOVAR		ANSB
        MOVAR      	PUB
        MOVAR      	PDB
        MOVAR      	IOB
		MOVIA      	0xFF
        MOVAR      	OEB
		;//IOC
        MOVIA      	0x00
		MOVAR		ANSC
        MOVAR      	PUC
        MOVAR      	PDC
        MOVAR      	IOC
		MOVIA      	0xFF
        MOVAR      	OEC
		;//IOD
        MOVIA      	0x00
		MOVAR		ANSD
        MOVAR      	PUD
        MOVAR      	PDD
        MOVAR      	IOD
		MOVIA      	0xFF
        MOVAR      	OED
		;//IOE
        MOVIA      	0x00
		MOVAR		ANSE
        MOVAR      	PUE
        MOVAR      	PDE
        MOVAR      	IOE
		MOVIA      	0xFF
        MOVAR      	OEE
		;//IOF
        MOVIA      	0x00
		MOVAR		ANSF
        MOVAR     	PUF
        MOVAR      	PDF
        MOVAR      	IOF
		MOVIA      	0xFF
        MOVAR      	OEF

;//------------------------------------------------------------------------      
;//Init Interrupt           
        BCLR       	OPTION,6		;//1:全局中断低优先级中断使能,0:屏蔽全局中断低优先级中断
		BCLR       	OPTION,7		;//1:全局中断高优先级中断使能,0:屏蔽全局中断高优先级中断
		RETURN

;//==============================================================================
;//*****************************RAM清零(0000H~07FFH)*****************************
;//RAM清零：RAM区0000H~07FFH全部清零
;//==============================================================================				
Clr_RAM_0000H_07FFH:
		CLRR    	FSR0L
		CLRR    	FSR0H
ClrRam_Loop:
		MOVIA		0x00
		MOVAR   	INDF0
		INCR    	FSR0L,1
		MOVIA		0
		ADCAR		FSR0H,1
		MOVIA		8
		SUBRA		FSR0H,0
		JBTS1		STATUS,C
		GOTO    	ClrRam_Loop
RAM_INIT_END:
		RETURN

;//******************************************************************************
;//=================================文件包含=====================================
;//******************************************************************************
#include	I2C_Slave_Work.INC		;//I2C从机工作
;//******************************************************************************
		END
;//******************************END OF FILE*************************************